.fade-enter-active,
.fade-leave-active {
  transition-duration: 0.3s;
  transition-property: height, opacity;
  transition-timing-function: ease-in-out;
  overflow: hidden;
}

.fade-enter,
.fade-leave-active {
  opacity: 0
}

.slide-left-enter-active,
.slide-left-leave-active,
.slide-right-enter-active,
.slide-right-leave-active {
  transition-duration: 0.2s;
  transition-property: height, opacity, transform;
  // transition-timing-function: linear;
  transition-timing-function: cubic-bezier(0.55, 0, 0.1, 1);
  overflow: hidden;
}
.slide-left-enter,
.slide-right-leave-active {
  opacity: 0.2;
  transform: translate(100%, 0);
}

.slide-left-leave-active,
.slide-right-enter {
  opacity: 0.2;
  transform: translate(-100%, 0);
}

.zoom-enter-active,
.zoom-leave-active {
  animation-duration: 0.3s;
  animation-fill-mode: both;
  animation-name: zoom;
}

.zoom-leave-active {
  animation-direction: reverse;
}

@keyframes zoom {
  from {
    opacity: 0;
    transform: scale3d(0.3, 0.3, 0.3);
  }

  100% {
    opacity: 1;
  }
}



// Custom transitions


$transition: (
  'fast-out-slow-in': cubic-bezier(0.4, 0, 0.2, 1),
  'linear-out-slow-in': cubic-bezier(0, 0, 0.2, 1),
  'fast-out-linear-in': cubic-bezier(0.4, 0, 1, 1),
  'ease-in-out': cubic-bezier(0.4, 0, 0.6, 1),
  'fast-in-fast-out': cubic-bezier(0.25, 0.8, 0.25, 1),
  'swing': cubic-bezier(0.25, 0.8, 0.5, 1)
) !default;
$primary-transition: 0.3s map-get($transition, 'swing') !default;
$secondary-transition: 0.2s map-get($transition, 'ease-in-out') !default;

@mixin transition-default() {
  &-enter-active,
  &-leave-active {
    transition: $primary-transition;
  }

  &-move {
    transition: transform .6s;
  }
}

.v-application
  // Component specific transitions
  .carousel-transition {
    &-enter {
      transform: translate(100%, 0);
    }

    &-leave, &-leave-to {
      position: absolute;
      top: 0;
      transform: translate(-100%, 0);
    }
  }

  .carousel-reverse-transition {
    &-enter {
      transform: translate(-100%, 0);
    }

    &-leave, &-leave-to {
      position: absolute;
      top: 0;
      transform: translate(100%, 0);
    }
  }

  .dialog-transition {
    &-enter, &-leave-to {
      transform: scale(0.5);
      opacity: 0;
    }

    &-enter-to, &-leave {
      opacity: 1;
    }
  }

  .dialog-bottom-transition {
    &-enter, &-leave-to {
      transform: translateY(100%);
    }
  }

  .picker-transition,
  .picker-reverse-transition {
    &-enter-active,
    &-leave-active {
      transition: .3s map-get($transition, 'linear-out-slow-in');
    }

    &-enter,
    &-leave-to {
      opacity: 0;
    }

    &-leave,
    &-leave-active,
    &-leave-to {
      position: absolute !important;
    }
  }

  .picker-transition {
    &-enter {
      transform: translate(0, 100%);
    }

    &-leave-to {
      transform: translate(0, -100%);
    }
  }

  .picker-reverse-transition {
    &-enter {
      transform: translate(0, -100%);
    }

    &-leave-to {
      transform: translate(0, 100%);
    }
  }

  .picker-title-transition {
    &-enter-to,
    &-leave {
      transform: translate(0, 0);
    }

    &-enter {
      transform: translate(-100%, 0);
    }

    &-leave-to {
      opacity: 0;
      transform: translate(100%, 0);
    }

    &-leave,
    &-leave-to,
    &-leave-active {
      position: absolute !important;
    }
  }

  .tab-transition {
    &-enter {
      transform: translate(100%, 0);
    }

    &-leave, &-leave-active {
      position: absolute;
      top: 0;
    }

    &-leave-to {
      position: absolute;
      transform: translate(-100%, 0);
    }
  }

  .tab-reverse-transition {
    &-enter {
      transform: translate(-100%, 0);
    }

    &-leave, &-leave-to {
      top: 0;
      position: absolute;
      transform: translate(100%, 0);
    }
  }

  // Generic transitions
  .expand-transition {
    @include transition-default();
  }

  .expand-x-transition {
    @include transition-default();
  }

  .scale-transition {
    @include transition-default();

    &-enter, &-leave, &-leave-to {
      opacity: 0;
      transform: scale(0);
    }
  }

  .alert-transition {
    @include transition-default();
    transform-origin: top center;
    max-height: 100px;

    &-enter, &-leave, &-leave-to {
      opacity: 0;
      transform-origin: top center;
      transform: scaleY(0);
      max-height: 0;
      padding-top: 0;
      padding-bottom: 0;
    }
  }

  .notification-transition {
    @include transition-default();
    opacity: 1;
    transform: translateX(0);
    max-height: 0;

    &-enter, &-leave, &-leave-to {
      opacity: 0;
      max-height: 400px;
      transform: translateX(100px);
    }
  }

  .message-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
      transform: translateY(-15px);
    }

    &-leave, &-leave-active {
      position: absolute;
    }
  }

  .slide-y-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
      transform: translateY(-15px);
    }
  }

  .slide-y-reverse-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
      transform: translateY(15px);
    }
  }

  .scroll-y-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
    }

    &-enter {
      transform: translateY(-15px);
    }

    &-leave-to {
      transform: translateY(15px);
    }
  }

  .scroll-y-reverse-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
    }

    &-enter {
      transform: translateY(15px);
    }

    &-leave-to {
      transform: translateY(-15px);
    }
  }

  .scroll-x-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
    }

    &-enter {
      transform: translateX(-15px);
    }

    &-leave-to {
      transform: translateX(15px);
    }
  }

  .scroll-x-reverse-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
    }

    &-enter {
      transform: translateX(15px);
    }

    &-leave-to {
      transform: translateX(-15px);
    }
  }

  .slide-x-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
      transform: translateX(-15px);
    }
  }

  .slide-x-reverse-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0;
      transform: translateX(15px);
    }
  }

  .fade-transition {
    @include transition-default();

    &-enter, &-leave-to {
      opacity: 0 !important;
    }
  }

  .fab-transition {
    @include transition-default();

    &-enter, &-leave-to {
      transform: scale(0) rotate(-45deg);
    }
  }

.fade {
  &-enter-active,
  &-leave-active {
    transition-duration: 0.3s;
    transition-property: opacity;
    transition-timing-function: ease;
  }

  &-enter,
  &-leave-active {
    opacity: 0
  }
}
